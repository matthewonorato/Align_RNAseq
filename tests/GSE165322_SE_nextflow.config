params {
    project_name     = 'GSE165322'
    samplesheet      = '../../inputs/GSE165322_sample_sheet_for_alignment.csv'
    outdir           = '../../outputs/GSE165322/'  // Use single-quotes for wildcards
    min_read_len     = 18      // Set to avg_read_len divided by 3
    strandedness     = 'none'  // none, forward (ISF/sense), reverse (ISR/antisense)
    avg_read_len     = 54      // Single-end data only
    sd_read_len      = 5.2     // Single-end data only
}

// Set executor limits (global VM constraints)
// Why not use params.threads for all steps? If each step uses all CPUs, concurrent jobs will compete
executor {
  name = 'local'          // or 'slurm', 'awsbatch', etc.
  cpus = 16               // total VM CPUs available
  memory = '104 GB'       // total VM memory available
}

process {
    errorStrategy = 'retry'
    maxRetries = 3
}

profiles {
    hg38 {
        params.star_index = "/mnt/disks/resources/data/references/outputs/Homo_sapiens/ensembl/111/star_index/"
        params.rsem_index = "/mnt/disks/resources/data/references/outputs/Homo_sapiens/ensembl/111/rsem_index/Homo_sapiens.GRCh38.111"
        params.bed12      = "/mnt/disks/resources/data/references/outputs/Homo_sapiens/ensembl/111/Homo_sapiens.GRCh38.111.bed12"
    }
}

workDir = '../../work'

timeline {
    enabled = true
    file    = "${params.outdir}/timeline.html"
}

trace {
    enabled = true
    file    = "${params.outdir}/trace.txt"
}

report {
    enabled = true
    file    = "${params.outdir}/report.html"
}
